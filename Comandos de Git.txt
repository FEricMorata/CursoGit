Comandos de Git:

pwd: Muestra la ruta actual del directorio en el que te encuentras.

ls: Lista el contenido del directorio actual, mostrando todos los archivos y carpetas.

cd [nombre carpeta]: Permite navegar entre carpetas. Puedes usar cd seguido del nombre de la carpeta a la que quieres ir.

git init: Inicializa un repositorio Git en el directorio actual, creando un repositorio vacío donde se rastrearán los cambios.

git status: Muestra el estado actual de tu repositorio, incluyendo los archivos sin seguimiento, los cambios sin preparar y los cambios en el área de preparación.

git add [nombre archivo]: Agrega un archivo específico al área de preparación, lo que significa que estará listo para ser incluido en el próximo commit.

git add .: Agrega todos los cambios realizados en los archivos de todas las carpetas al área de preparación.

Nota: Es importante realizar un git add antes de hacer un commit para incluir los cambios deseados.

git commit -m "mensaje": Crea un nuevo commit con los cambios en el área de preparación y un mensaje descriptivo que explica los cambios realizados.

ctrl + l: Limpia la terminal, eliminando el contenido previo y proporcionando un espacio de trabajo más limpio.

git log: Muestra un registro de todos los commits realizados en el repositorio, incluyendo detalles como el autor, la fecha y el mensaje del commit.

git checkout [siglas commit]: Permite recuperar un archivo desde un commit anterior usando las siglas del commit. Por ejemplo, git checkout fe801.

git checkout master: Regresa al último commit de la rama principal (generalmente llamada "master").

git checkout -b [nombre rama]: Crea y cambia a una nueva rama con el nombre especificado. Esto es útil para trabajar en nuevas características o correcciones sin afectar la rama principal.

git branch: Lista todas las ramas en el repositorio, mostrando la rama actual con un asterisco.

git reset [siglas commit]: Restablece la rama al commit especificado, manteniendo los cambios en el área de preparación. Útil para deshacer commits sin perder los cambios realizados.

rm [nombre archivo]: Borra un archivo específico en el sistema de archivos.

git restore [nombre archivo]: Restaura un archivo que ha sido borrado, devolviéndolo a su estado anterior al borrado.

git pull: Descarga los cambios desde el repositorio remoto en GitHub a tu repositorio local, actualizando tu código local con los cambios más recientes.

Para crear un repositorio desde GitHub y añadir tu proyecto desde la línea de comandos de Git:

git remote add origin [URL del repositorio en GitHub]: Conecta tu repositorio local con un repositorio remoto en GitHub, permitiéndote enviar y recibir cambios.

$ ssh-keygen -t ed25519 -C "tu-correo@example.com": Genera una clave SSH, que es utilizada para autenticarte en GitHub de manera segura. Asegúrate de establecer una contraseña segura cuando se te solicite.

git push -u origin main: Sube tus cambios locales al repositorio en GitHub, estableciendo la rama "main" como rama remota predeterminada para futuras operaciones de push y pull.



